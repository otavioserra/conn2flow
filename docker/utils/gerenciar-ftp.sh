#!/bin/bash

# Script de gerenciamento de usu√°rios FTP para fauria/vsftpd
# Compat√≠vel com o container conn2flow-ftp

# Configura√ß√µes
CONTAINER_NAME="conn2flow-ftp"

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para verificar se o container est√° rodando
verificar_container() {
    if ! docker ps --format "table {{.Names}}" | grep -q "^$CONTAINER_NAME$"; then
        echo -e "${RED}‚ùå Container $CONTAINER_NAME n√£o est√° rodando!${NC}"
        echo "Inicie o container com: docker-compose up -d ftp"
        exit 1
    fi
}

# Fun√ß√£o para criar usu√°rio FTP
criar_usuario() {
    local usuario=$1
    local senha=$2
    
    if [ -z "$usuario" ] || [ -z "$senha" ]; then
        echo -e "${RED}‚ùå Erro: Usu√°rio e senha s√£o obrigat√≥rios${NC}"
        exit 1
    fi
    
    echo -e "${BLUE}Ì±§ Criando usu√°rio FTP: $usuario${NC}"
    
    # Criar diret√≥rio home para o usu√°rio no volume compartilhado
    docker exec $CONTAINER_NAME mkdir -p /home/vsftpd/$usuario
    docker exec $CONTAINER_NAME chown ftp:ftp /home/vsftpd/$usuario
    
    # Adicionar usu√°rio ao arquivo virtual_users.txt
    docker exec $CONTAINER_NAME sh -c "echo '$usuario' >> /etc/vsftpd/virtual_users.txt"
    docker exec $CONTAINER_NAME sh -c "echo '$senha' >> /etc/vsftpd/virtual_users.txt"
    
    # Recriar o database de usu√°rios virtuais
    docker exec $CONTAINER_NAME /usr/bin/db_load -T -t hash -f /etc/vsftpd/virtual_users.txt /etc/vsftpd/virtual_users.db
    
    # Ajustar permiss√µes do database
    docker exec $CONTAINER_NAME chown ftp:ftp /etc/vsftpd/virtual_users.db
    docker exec $CONTAINER_NAME chmod 600 /etc/vsftpd/virtual_users.db
    
    echo -e "${GREEN}‚úÖ Usu√°rio $usuario criado com sucesso!${NC}"
}

# Fun√ß√£o para listar usu√°rios
listar_usuarios() {
    echo -e "${BLUE}Ì≥ã Listando usu√°rios FTP:${NC}"
    
    if docker exec $CONTAINER_NAME test -f /etc/vsftpd/virtual_users.txt; then
        echo -e "${YELLOW}Usu√°rios configurados:${NC}"
        docker exec $CONTAINER_NAME sh -c "awk 'NR%2==1' /etc/vsftpd/virtual_users.txt" | while read usuario; do
            echo -e "  ‚Ä¢ $usuario"
        done
    else
        echo -e "${YELLOW}Nenhum usu√°rio encontrado.${NC}"
    fi
}

# Fun√ß√£o para remover usu√°rio
remover_usuario() {
    local usuario=$1
    
    if [ -z "$usuario" ]; then
        echo -e "${RED}‚ùå Erro: Nome do usu√°rio √© obrigat√≥rio${NC}"
        exit 1
    fi
    
    echo -e "${YELLOW}Ì∑ëÔ∏è  Removendo usu√°rio FTP: $usuario${NC}"
    
    # Criar arquivo tempor√°rio sem o usu√°rio
    docker exec $CONTAINER_NAME sh -c "
    if [ -f /etc/vsftpd/virtual_users.txt ]; then
        > /tmp/virtual_users_temp.txt
        while IFS= read -r line; do
            if [ \"\$line\" = \"$usuario\" ]; then
                # Pular o usu√°rio e a pr√≥xima linha (senha)
                read -r # pula a senha
            else
                echo \"\$line\" >> /tmp/virtual_users_temp.txt
            fi
        done < /etc/vsftpd/virtual_users.txt
        mv /tmp/virtual_users_temp.txt /etc/vsftpd/virtual_users.txt
    fi
    "
    
    # Recriar o database
    docker exec $CONTAINER_NAME /usr/bin/db_load -T -t hash -f /etc/vsftpd/virtual_users.txt /etc/vsftpd/virtual_users.db
    
    # Remover diret√≥rio home
    docker exec $CONTAINER_NAME rm -rf /home/vsftpd/$usuario
    
    echo -e "${GREEN}‚úÖ Usu√°rio $usuario removido com sucesso!${NC}"
}

# Fun√ß√£o para resetar senha
resetar_senha() {
    local usuario=$1
    local nova_senha=$2
    
    if [ -z "$usuario" ] || [ -z "$nova_senha" ]; then
        echo -e "${RED}‚ùå Erro: Usu√°rio e nova senha s√£o obrigat√≥rios${NC}"
        exit 1
    fi
    
    echo -e "${YELLOW}Ì¥ë Alterando senha do usu√°rio: $usuario${NC}"
    
    # Criar arquivo tempor√°rio com nova senha
    docker exec $CONTAINER_NAME sh -c "
    if [ -f /etc/vsftpd/virtual_users.txt ]; then
        > /tmp/virtual_users_temp.txt
        while IFS= read -r line; do
            if [ \"\$line\" = \"$usuario\" ]; then
                echo \"\$line\" >> /tmp/virtual_users_temp.txt
                read -r # pula a senha antiga
                echo \"$nova_senha\" >> /tmp/virtual_users_temp.txt
            else
                echo \"\$line\" >> /tmp/virtual_users_temp.txt
            fi
        done < /etc/vsftpd/virtual_users.txt
        mv /tmp/virtual_users_temp.txt /etc/vsftpd/virtual_users.txt
    fi
    "
    
    # Recriar o database
    docker exec $CONTAINER_NAME /usr/bin/db_load -T -t hash -f /etc/vsftpd/virtual_users.txt /etc/vsftpd/virtual_users.db
    
    echo -e "${GREEN}‚úÖ Senha do usu√°rio $usuario alterada com sucesso!${NC}"
}

# Fun√ß√£o para testar conex√£o
testar_conexao() {
    local usuario=$1
    local senha=$2
    
    if [ -z "$usuario" ] || [ -z "$senha" ]; then
        echo -e "${RED}‚ùå Erro: Usu√°rio e senha s√£o obrigat√≥rios para o teste${NC}"
        exit 1
    fi
    
    echo -e "${BLUE}Ì∑™ Testando conex√£o FTP para usu√°rio: $usuario${NC}"
    
    if curl -s --connect-timeout 5 ftp://$usuario:$senha@localhost/ >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Conex√£o bem-sucedida!${NC}"
    else
        echo -e "${RED}‚ùå Falha na conex√£o. Verifique as credenciais.${NC}"
    fi
}

# Fun√ß√£o para exibir informa√ß√µes do sistema
info() {
    echo -e "${BLUE}‚ÑπÔ∏è  Informa√ß√µes do sistema FTP:${NC}"
    echo "Container: $CONTAINER_NAME"
    echo "Status: $(docker inspect --format='{{.State.Status}}' $CONTAINER_NAME 2>/dev/null || echo 'n√£o encontrado')"
    echo "Porta FTP: 21"
    echo "Portas PASV: 21100-21110"
    echo ""
    listar_usuarios
}

# Fun√ß√£o para mostrar ajuda
mostrar_ajuda() {
    echo -e "${BLUE}Ì¥ß Gerenciador de FTP - conn2flow${NC}"
    echo ""
    echo -e "${YELLOW}Uso:${NC}"
    echo "  $0 <comando> [argumentos]"
    echo ""
    echo -e "${YELLOW}Comandos dispon√≠veis:${NC}"
    echo "  criar <usuario> <senha>      - Criar novo usu√°rio FTP"
    echo "  listar                       - Listar todos os usu√°rios"
    echo "  remover <usuario>            - Remover usu√°rio FTP"
    echo "  resetar-senha <usuario>      - Resetar senha do usu√°rio"
    echo "         <nova_senha>"
    echo "  testar <usuario> <senha>     - Testar conex√£o FTP"
    echo "  info                         - Mostrar informa√ß√µes do sistema"
    echo "  ajuda                        - Mostrar esta ajuda"
    echo ""
    echo -e "${YELLOW}Exemplos:${NC}"
    echo "  $0 criar localhost minhasenha123"
    echo "  $0 listar"
    echo "  $0 testar localhost minhasenha123"
    echo "  $0 remover localhost"
}

# Verificar argumentos
if [ $# -eq 0 ]; then
    mostrar_ajuda
    exit 1
fi

# Verificar se o container est√° rodando (exceto para ajuda)
if [ "$1" != "ajuda" ]; then
    verificar_container
fi

# Processar comando
case "$1" in
    "criar")
        criar_usuario "$2" "$3"
        ;;
    "listar")
        listar_usuarios
        ;;
    "remover")
        remover_usuario "$2"
        ;;
    "resetar-senha")
        resetar_senha "$2" "$3"
        ;;
    "testar")
        testar_conexao "$2" "$3"
        ;;
    "info")
        info
        ;;
    "ajuda")
        mostrar_ajuda
        ;;
    *)
        echo -e "${RED}‚ùå Comando desconhecido: $1${NC}"
        echo ""
        mostrar_ajuda
        exit 1
        ;;
esac

name: Release Gestor

on:
  push:
    tags:
      - 'gestor-v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: zip, curl, mbstring, openssl
        
    - name: Install Composer dependencies
      run: |
        cd gestor
        composer install --no-dev --optimize-autoloader --no-interaction
        
    - name: Generate Resources Updates
      run: |
        cd gestor/controladores/agents/arquitetura
        php atualizacao-dados-recursos.php
        echo "Resource updates generated successfully"

    - name: Commit Resources Updates
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add gestor/db/data/*.json
        git add gestor/db/orphans/*.json
        git add gestor/resources/*
        git add gestor/modulos/*/*.json
        git diff --cached --quiet || git commit -m "Auto-update resources for release ${{ github.ref_name }}"
        
    - name: Remove resource files
      run: |
        # Remove all resource files and directory to make installation lighter
        rm -rf gestor/resources/ && rmdir gestor/resources/ 2>/dev/null || true
        
        # Remove module resource files recursively
        find gestor/modulos -type d -name "resources" -exec rm -rf {} + || true
        
        echo "All resource files removed from release"
        
    - name: Create gestor.zip + checksum
      run: |
        # Remove arquivos desnecessários se existirem
        rm -rf gestor/.git* || true
        rm -rf gestor/vendor/bin/.phpunit* || true
        rm -rf gestor/vendor/composer/tmp-* || true

        # Remover somente .env sensíveis da raiz (preservar templates em autenticacoes.exemplo)
        find gestor -maxdepth 1 -type f -name '.env*' -exec rm -f {} + 2>/dev/null || true
        # Remover .env internos reais de autenticacoes, exceto os de templates
        if [ -d gestor/autenticacoes ]; then
          find gestor/autenticacoes -type f -name '.env*' -not -path '*/autenticacoes.exemplo/*' -exec rm -f {} + 2>/dev/null || true
        fi

        # Criar o arquivo ZIP (resource files already removed)
        cd gestor
        zip -r ../gestor.zip . \
          -x "*.git*" \
          -x "vendor/bin/.phpunit*" \
          -x "vendor/composer/tmp-*" \
          -x "node_modules/*" \
          -x "*.DS_Store*" \
          -x "*.log*" \
          -x "tests/*" \
          -x "phpunit.xml*" \
          -x "resources/*" \
          -x "modulos/*/resources/*"
        cd ..
        sha256sum gestor.zip | awk '{print $1}' > gestor.zip.sha256

    - name: Get tag name
      id: tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.TAG_NAME }}
        name: "Gestor ${{ steps.tag.outputs.TAG_NAME }}"
        body: |
          ## 🚀 Conn2Flow Gestor Release v2.1.0 (Sistema de Plugins V2 + Arquitetura Refatorada)
          
          Esta release traz uma **revolução completa no sistema de plugins** com arquitetura V2, templates automatizados e rastreio completo de dados.
          
          ### 🎯 Novidades Principais desta Versão:
          - ✅ **Sistema de Plugins V2**: Arquitetura completamente refatorada com detecção dinâmica
          - ✅ **Templates de Desenvolvimento Automatizados**: Scripts padronizados para criação de plugins
          - ✅ **Rastreio Completo de Origem**: Injeção automática de slug em tabelas com coluna plugin
          - ✅ **Resolução Dinâmica de Ambiente**: Environment.json dinâmico em todos os scripts
          - ✅ **Estrutura de Plugins Modernizada**: Nova arquitetura para desenvolvimento Conn2Flow
          - ✅ **Sistema de Correções Críticas**: Correções importantes no sistema de plugins
          
          ### 🔧 Melhorias Técnicas:
          - ✅ **Migração para IDs Textuais**: Campos de referência convertidos para formato textual
          - ✅ **Scripts de Automação Padronizados**: Resolução dinâmica em todos os scripts
          - ✅ **Arquitetura de Plugins Refatorada**: Sistema V2 com detecção automática
          - ✅ **Timezone Corrigido**: Ajuste para America/Sao_Paulo no Docker
          - ✅ **Compatibilidade Cross-Platform**: Scripts funcionam em qualquer repositório
          - ✅ **Limpeza Ampla do Sistema**: Desabilitação de ferramentas legadas
          
          ### 📦 Conteúdo:
          - Sistema gestor completo com arquitetura híbrida multilíngue
          - Sistema de plugins V2 com templates automatizados
          - Migrations para rastreio completo de dados (coluna plugin)
          - Sistema de atualização automática consolidado (v1.15.0)
          - 264+ recursos organizados por idioma (pt-br base)
          - Dependências do Composer otimizadas
          - Documentação técnica completa
          
          ### 🔧 Sistema de Plugins V2:
          - **Detecção Dinâmica**: Sistema automático de descoberta de Data.json
          - **Templates Automatizados**: Scripts prontos para desenvolvimento de plugins
          - **Rastreio de Origem**: Injeção automática de slug em todas as tabelas
          - **Resolução Dinâmica**: Environment.json dinâmico em todos os scripts
          - **Estrutura Moderna**: Arquitetura V2 para desenvolvimento Conn2Flow
          - **Correções Críticas**: Sistema robusto com correções importantes
          
          ### 🎯 Recursos de Desenvolvimento:
          - Templates completos em `dev-plugins/plugins/templates/`
          - Scripts automatizados de commit, release e workflows
          - Resolução dinâmica do environment.json
          - Compatibilidade com qualquer repositório de plugin
          - Documentação abrangente para desenvolvimento
          
          ### 🔧 Como usar:
          1. Use o [Conn2Flow Installer v1.4.1+](https://github.com/otavioserra/conn2flow/releases) para instalação automática
          2. Para instalação manual, use o instalador web em `gestor-instalador/index.php`
          3. Utilize os templates em `dev-plugins/plugins/templates/` para criar novos plugins
          
          ### 📋 Requisitos:
          - PHP 8.1+
          - MySQL 5.7+ ou MariaDB 10.2+
          - Extensões: zip, curl, mbstring, openssl, pdo_mysql
          - Git (para desenvolvimento de plugins)
          
          ### 🌟 Padrões Aprendidos e Implementados:
          - ✅ **Plugins V2**: Arquitetura moderna com detecção dinâmica
          - ✅ **Templates Automatizados**: Scripts padronizados para desenvolvimento
          - ✅ **Rastreio Completo**: Injeção automática de origem em tabelas
          - ✅ **Resolução Dinâmica**: Environment.json dinâmico e robusto
          - ✅ **IDs Textuais**: Migração completa para formato textual
          - ✅ **Cross-Platform**: Compatibilidade universal de scripts
          
          ### 🎉 Melhorias desta versão:
          - ✅ **Sistema de Plugins Revolucionário**: Arquitetura V2 completa e moderna
          - ✅ **Desenvolvimento Facilitado**: Templates automatizados e documentação
          - ✅ **Rastreabilidade Total**: Sistema completo de origem de dados
          - ✅ **Automação Completa**: Scripts dinâmicos e robustos
          - ✅ **Arquitetura Moderna**: IDs textuais e estrutura refatorada
          - ✅ **Compatibilidade Preservada**: Zero breaking changes para usuários finais
          
          ### ⚠️ Breaking Changes (Migration Guide):
          - Campos de referência de módulos migrados para formato textual
          - Scripts de automação padronizados com resolução dinâmica
          - Arquitetura de plugins modernizada (V2)
          - Timezone ajustado para America/Sao_Paulo
          
          ### 🔄 Migration Path:
          1. Use o instalador web para atualização automática
          2. Ou execute: `php controladores/atualizacoes/atualizacoes-banco-de-dados.php --env-dir=seu-dominio`
          3. Atualize scripts de plugins para usar resolução dinâmica
          4. Utilize os novos templates para desenvolvimento
          5. Aproveite a arquitetura V2 de plugins
        draft: false
        prerelease: false
        files: |
          gestor.zip
          gestor.zip.sha256
